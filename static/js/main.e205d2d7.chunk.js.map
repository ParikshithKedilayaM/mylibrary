{"version":3,"sources":["BooksAPI.js","SearchBar.js","BookCover.js","BookDescription.js","Book.js","SearchResults.js","Search.js","Header.js","BooksSection.js","SearchButton.js","HomePage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","SearchBar","props","react_default","a","createElement","className","react_router_dom","to","type","placeholder","value","query","onChange","changeQuery","autoFocus","BookCover","style","width","height","backgroundImage","undefined","imageLinks","thumbnail","BookDescription","title","authors","map","author","key","Book","changeShelf","event","_this","target","_this2","this","index","books","findIndex","x","src_BookCover","getValue","disabled","src_BookDescription","Component","SearchResults","state","searchResults","shelfChange","shelfUpdate","prevProps","data","results","setState","_this3","length","src_Book","Search","updateShelf","src_SearchBar","src_SearchResults","Header","BooksSection","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","sectionTitle","SearchButton","HomePage","src_Header","src_BooksSection","src_SearchButton","BooksApp","bookExists","newBook","filter","updateBooks","prevState","pbook","toConsumableArray","BooksAPI","allbooks","react_router","exact","path","render","src_HomePage","src_Search","React","ReactDOM","src_App","document","getElementById"],"mappings":"sQACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gCCTNC,MAnBf,SAAoBC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAK,IAAIF,UAAU,gBAAzB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACAI,KAAK,OACLC,YAAY,4BACZC,MAAOT,EAAMU,MACbC,SAAUX,EAAMY,YAChBC,WAAS,OCMVC,MAjBf,SAAmBd,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXW,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BC,gBAAe,yBAAA/B,YACiBgC,IAA1BnB,EAAMhB,KAAKoC,iBAC2BD,IAApCnB,EAAMhB,KAAKoC,WAAWC,UACpBrB,EAAMhB,KAAKoC,WAAWC,UACtB,GAJK,2BCUZC,MAdf,SAAyBtB,GACrB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcJ,EAAMhB,KAAKuC,YAChBJ,IAAvBnB,EAAMhB,KAAKwC,SACTxB,EAAMhB,KAAKwC,QAAQC,IAAI,SAAAC,GAAM,OAC5BzB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKD,EAAQtB,UAAU,gBAAiBsB,OC+B9CE,6MAlCXC,YAAc,SAACC,GACXC,EAAK/B,MAAM6B,YAAYE,EAAK/B,MAAMhB,KAAM8C,EAAME,OAAOvB,kFAE9C,IAAAwB,EAAAC,KACDC,EAAQD,KAAKlC,MAAMoC,MAAMC,UAAU,SAAAC,GAAC,OAAIA,EAAElD,KAAO6C,EAAKjC,MAAMhB,KAAKI,KACvE,OAAO+C,GAAS,EAAID,KAAKlC,MAAMoC,MAAMD,GAAOlD,MAAQ,wCAGpD,OACIgB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACoC,EAAD,CAAWvD,KAAQkD,KAAKlC,MAAMhB,OAC9BiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQQ,SAAUuB,KAAKL,YAAapB,MAASyB,KAAKM,YAC9CvC,EAAAC,EAAAC,cAAA,UAAQM,MAAM,OAAOgC,UAAQ,GAA7B,cACAxC,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,oBAAd,qBACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,cAAd,gBACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,WAIZR,EAAAC,EAAAC,cAACuC,EAAD,CAAiB1D,KAAQkD,KAAKlC,MAAMhB,gBAxBrC2D,aC2CJC,6MA1CXC,MAAQ,CACJC,cAAgB,MAiBpBC,YAAc,SAAC/D,EAAMC,GACjB8C,EAAK/B,MAAMgD,YAAYhE,EAAMC,sFAfdgE,GAAW,ILwBXvC,EKxBWuB,EAAAC,KACtBe,EAAUvC,QAAUwB,KAAKlC,MAAMU,QACV,KAArBwB,KAAKlC,MAAMU,QLsBAA,EKtBgCwB,KAAKlC,MAAMU,MLuBhExB,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEe,YACtBd,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAsD,GAAI,OAAIA,EAAKd,SK/BkDxC,KAAK,SAACuD,GAC/DlB,EAAKmB,SAAS,CACVN,cAAgBK,MAGH,KAArBjB,KAAKlC,MAAMU,OACRwB,KAAKkB,SAAU,CACdN,cAAgB,uCASnB,IAAAO,EAAAnB,KACL,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACoBe,IAA7Be,KAAKW,MAAMC,eACTZ,KAAKW,MAAMC,cAAcQ,OAAS,GAClCpB,KAAKW,MAAMC,cAAcrB,IAAI,SAACzC,GAAD,OAC5BiB,EAAAC,EAAAC,cAACoD,EAAD,CAAM5B,IAAK3C,EAAKI,GAAIgD,MAAOiB,EAAKrD,MAAMoC,MAAOpD,KAAMA,EAAM6C,YAAawB,EAAKN,yBA9BvEJ,aC6Bba,6MA5BXX,MAAQ,CACNnC,MAAQ,MAGVE,YAAc,SAACkB,GACbC,EAAKqB,SAAS,CACZ1C,MAAQoB,EAAME,OAAOvB,WAIzBgD,YAAc,SAACzE,EAAMC,GACnB8C,EAAK/B,MAAMyD,YAAYzE,EAAMC,4EAI7B,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACuD,EAAD,CAAWhD,MAAOwB,KAAKW,MAAMnC,MAAOE,YAAasB,KAAKtB,cACtDX,EAAAC,EAAAC,cAACwD,EAAD,CAAejD,MAAOwB,KAAKW,MAAMnC,MAAO0B,MAAOF,KAAKlC,MAAMoC,MAAOY,YAAad,KAAKuB,sBAnBxEd,aCKNiB,MARf,WACI,OACI3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,gCC0BG0D,EA3Bf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAhC,EAAAzC,OAAA0E,EAAA,EAAA1E,CAAA4C,KAAA2B,GAAA,QAAAI,EAAAC,UAAAZ,OAAAa,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAtC,EAAAzC,OAAAgF,EAAA,EAAAhF,CAAA4C,MAAA6B,EAAAzE,OAAAiF,EAAA,EAAAjF,CAAAuE,IAAAW,KAAAC,MAAAV,EAAA,CAAA7B,MAAA/C,OAAAgF,MACEpB,YAAc,SAAC/D,EAAMC,GAClB8C,EAAK/B,MAAMgD,YAAYhE,EAAMC,IAFlC8C,EAAA,OAAAzC,OAAAoF,EAAA,EAAApF,CAAAuE,EAAAC,GAAAxE,OAAAqF,EAAA,EAAArF,CAAAuE,EAAA,EAAAlC,IAAA,SAAAlB,MAAA,WAIa,IAAAwB,EAAAC,KACL,OAEEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmB8B,KAAKlC,MAAM4E,cAC5C3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACX8B,KAAKlC,MAAMoC,MAAMX,IAAI,SAAAzC,GAAI,OACxBA,EAAKC,QAAUgD,EAAKjC,MAAMf,OAC1BgB,EAAAC,EAAAC,cAACoD,EAAD,CAAM5B,IAAK3C,EAAKI,GAAIgD,MAAOH,EAAKjC,MAAMoC,MAAOpD,KAAMA,EAAM6C,YAAaI,EAAKc,uBAb7Fc,EAAA,CAAkClB,aCOnBkC,MARf,WACI,OACI5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAK,UAAUF,UAAY,iBAAjC,gBCsCG0E,6MArCZ9B,YAAc,SAAChE,EAAMC,GACjB8C,EAAK/B,MAAMyD,YAAYzE,EAAMC,4EAG7B,OAECgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6E,EAAD,CACIJ,aAAe,oBACf3F,MAAQ,mBACRmD,MAASF,KAAKlC,MAAMoC,MACpBY,YAAed,KAAKc,cACxB/C,EAAAC,EAAAC,cAAC6E,EAAD,CACIJ,aAAe,eACf3F,MAAQ,aACRmD,MAASF,KAAKlC,MAAMoC,MACpBY,YAAed,KAAKc,cACxB/C,EAAAC,EAAAC,cAAC6E,EAAD,CACIJ,aAAe,OACf3F,MAAQ,OACRmD,MAASF,KAAKlC,MAAMoC,MACpBY,YAAed,KAAKc,gBAG7B/C,EAAAC,EAAAC,cAAC8E,EAAD,cA5BYtC,aC4DRuC,6MAzDbrC,MAAQ,CACNT,MACE,MAUJ+C,WAAa,SAAC/C,EAAOgD,GAInB,OAHgBhD,EAAMiD,OAAQ,SAAArG,GAAI,OAC/BA,EAAKI,KAAOgG,EAAQhG,KAERkE,OAAS,KAE1BgC,YAAY,SAACC,EAAWvG,EAAMC,GAC5BD,EAAKC,MAAQA,EAab,OAXI8C,EAAKoD,WAAWI,EAAUnD,MAAOpD,GACxBuG,EAAUnD,MAAMX,IAAI,SAAA+D,GAC7B,OAAIA,EAAMpG,KAAOJ,EAAKI,GACbJ,EAEAwG,IAIJlG,OAAAmG,EAAA,EAAAnG,CAAOiG,EAAUnD,OAAjBjD,OAAA,CAAwBH,OAKrCyE,YAAc,SAACzE,EAAMC,GAEnB8C,EAAKqB,SAAS,SAACmC,GAAD,MAAgB,CAC3BnD,MAAQL,EAAKuD,YAAYC,EAAWvG,EAAMC,MAE5CyG,EAAgB1G,EAAMC,uFAnCH,IAAAgD,EAAAC,KXMpBhD,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAsD,GAAI,OAAIA,EAAKd,QWPDxC,KAAK,SAAC+F,GACtB1D,EAAKmB,SAAS,CACZhB,MAAQuD,uCAmCJ,IAAAtC,EAAAnB,KACR,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACdH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,OAAW,kBACjC9F,EAAAC,EAAAC,cAAC6F,EAAD,CAAU5D,MAASiB,EAAKR,MAAMT,MAAOqB,YAAeJ,EAAKI,iBAE3DxD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,UAAUC,OAAW,kBACvC9F,EAAAC,EAAAC,cAAC8F,EAAD,CAAQ7D,MAASiB,EAAKR,MAAMT,MAAOqB,YAAeJ,EAAKI,yBApD3CyC,IAAMvD,iBCD7BwD,IAASJ,OACL9F,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACiG,EAAD,OAEHC,SAASC,eAAe","file":"static/js/main.e205d2d7.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction SearchBar (props) {\r\n    return (\r\n        <div className=\"search-books-bar\">\r\n            <Link to = '/' className=\"close-search\">Close</Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Search by title or author\"\r\n                value={props.query}\r\n                onChange={props.changeQuery}\r\n                autoFocus/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nSearchBar.propTypes = {\r\n    query : PropTypes.string,\r\n    changeQuery : PropTypes.func.isRequired,\r\n}\r\nexport default SearchBar;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction BookCover(props) {\r\n    return (\r\n        <div className=\"book-cover\" \r\n            style={{ width: 128, height: 193, \r\n            backgroundImage: `url(\r\n                ${props.book.imageLinks !== undefined &&\r\n                    props.book.imageLinks.thumbnail !== undefined\r\n                    ? props.book.imageLinks.thumbnail\r\n                    : ''\r\n                }\r\n                )` }}>\r\n        </div>\r\n    )\r\n}\r\nBookCover.propTypes = {\r\n    book : PropTypes.object,\r\n}\r\nexport default BookCover;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction BookDescription(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"book-title\">{props.book.title}</div>\r\n            {props.book.authors !== undefined \r\n            && props.book.authors.map(author=>(\r\n                <div key={author} className=\"book-authors\" >{author}</div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nBookDescription.propTypes = {\r\n    book : PropTypes.object,\r\n}\r\nexport default BookDescription;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport BookCover from './BookCover';\r\nimport BookDescription from './BookDescription';\r\n\r\nclass Book extends Component {\r\n    changeShelf = (event) => {\r\n        this.props.changeShelf(this.props.book, event.target.value);\r\n    };\r\n    getValue() {\r\n        const index = this.props.books.findIndex(x => x.id === this.props.book.id)\r\n        return index >= 0 ? this.props.books[index].shelf : 'none'\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        <BookCover book = {this.props.book} />\r\n                        <div className=\"book-shelf-changer\">\r\n                            <select onChange={this.changeShelf} value = {this.getValue()}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"none\">None</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                            </select>\r\n                        </div>    \r\n                    </div>\r\n                    <BookDescription book = {this.props.book} />\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nBook.propTypes = {\r\n    book : PropTypes.object.isRequired,\r\n    changeShelf : PropTypes.func.isRequired,\r\n}\r\nexport default Book;\r\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from './Book'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass SearchResults extends Component {\r\n    state = {\r\n        searchResults : [],\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.query !== this.props.query) {\r\n            this.props.query !== '' && BooksAPI.search(this.props.query).then((results) => {\r\n                this.setState({\r\n                    searchResults : results,\r\n                });\r\n            });\r\n            this.props.query === '' \r\n            && this.setState ({\r\n                searchResults : []\r\n            })\r\n        }\r\n    };\r\n\r\n    shelfChange = (book, shelf) => {\r\n        this.props.shelfUpdate(book, shelf);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                    {this.state.searchResults !== undefined \r\n                    && this.state.searchResults.length > 0 \r\n                    && this.state.searchResults.map((book) => (\r\n                        <Book key={book.id} books={this.props.books} book={book} changeShelf={this.shelfChange}/>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSearchResults.propTypes = {\r\n    books : PropTypes.array,\r\n    query : PropTypes.string,\r\n    shelfUpdate : PropTypes.func.isRequired,\r\n}\r\nexport default SearchResults;\r\n","import React , { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SearchBar from './SearchBar'\r\nimport SearchResults from './SearchResults'\r\n\r\nclass Search extends Component {\r\n    state = {\r\n      query : '',\r\n    }\r\n\r\n    changeQuery = (event) => {\r\n      this.setState({\r\n        query : event.target.value,\r\n      });\r\n    }\r\n\r\n    updateShelf = (book, shelf) => {\r\n      this.props.updateShelf(book, shelf);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"search-books\">\r\n          <SearchBar query={this.state.query} changeQuery={this.changeQuery} />\r\n          <SearchResults query={this.state.query} books={this.props.books} shelfUpdate={this.updateShelf} />\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n  books : PropTypes.array,\r\n  updateShelf : PropTypes.func.isRequired,\r\n}\r\nexport default Search;","import React from 'react'\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"list-books-title\">\r\n            <h1>My Books Library</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\n\r\nexport class BooksSection extends Component {\r\n  shelfChange = (book, shelf) => {\r\n     this.props.shelfUpdate(book, shelf);\r\n  }\r\n    render() {\r\n        return (\r\n            \r\n          <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{this.props.sectionTitle}</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n                {this.props.books.map(book => (\r\n                  book.shelf === this.props.shelf &&\r\n                  <Book key={book.id} books={this.props.books} book={book} changeShelf={this.shelfChange}/>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n              \r\n        )\r\n    }\r\n}\r\nBooksSection.propTypes = {\r\n    sectionTitle : PropTypes.string.isRequired,\r\n    shelf : PropTypes.string.isRequired,\r\n    books : PropTypes.array,\r\n}\r\nexport default BooksSection\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SearchButton() {\r\n    return (\r\n        <div className=\"open-search\">\r\n            <Link to = '/search' className = \"search-button\">Add a book</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchButton;\r\n","import React, { Component } from 'react'\r\nimport Header from './Header'\r\nimport BooksSection from './BooksSection'\r\nimport SearchButton from './SearchButton'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass HomePage extends Component {\r\n   shelfUpdate = (book, shelf) => {\r\n       this.props.updateShelf(book, shelf);\r\n   }\r\n   render() {\r\n       return (\r\n        \r\n        <div className=\"list-books\">\r\n            <Header />\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                <BooksSection \r\n                    sectionTitle = 'Currently Reading' \r\n                    shelf = 'currentlyReading'\r\n                    books = {this.props.books} \r\n                    shelfUpdate = {this.shelfUpdate} />\r\n                <BooksSection \r\n                    sectionTitle = 'Want to Read' \r\n                    shelf = 'wantToRead'\r\n                    books = {this.props.books} \r\n                    shelfUpdate = {this.shelfUpdate} />\r\n                <BooksSection \r\n                    sectionTitle = 'Read' \r\n                    shelf = 'read'\r\n                    books = {this.props.books} \r\n                    shelfUpdate = {this.shelfUpdate} />\r\n              </div>\r\n            </div>\r\n           <SearchButton />\r\n        </div>\r\n       )\r\n   }\r\n}\r\n\r\nHomePage.propTypes = {\r\n   books : PropTypes.array,\r\n   updateShelf : PropTypes.func.isRequired,\r\n}\r\nexport default HomePage;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Route } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport HomePage from './HomePage'\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  state = {\r\n    books : \r\n      [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((allbooks) => {\r\n      this.setState({\r\n        books : allbooks\r\n      });\r\n    });\r\n  };\r\n  bookExists = (books, newBook) => {\r\n    const bookarr = books.filter( book => (\r\n       book.id === newBook.id\r\n    ))\r\n    return bookarr.length > 0 ? true : false;\r\n  }\r\n  updateBooks=(prevState, book, shelf)=>{\r\n    book.shelf = shelf;\r\n    let newList = [];\r\n    if (this.bookExists(prevState.books, book)) {\r\n      newList =  prevState.books.map(pbook=>{\r\n        if (pbook.id === book.id) {\r\n          return book;\r\n        } else {\r\n          return pbook;\r\n        }\r\n      })\r\n    } else {\r\n      newList = [...prevState.books, book];\r\n    }\r\n    return newList\r\n  }\r\n\r\nupdateShelf = (book, shelf) => {\r\n\r\n  this.setState((prevState) => ({\r\n     books : this.updateBooks(prevState, book, shelf)\r\n  }))\r\n   BooksAPI.update(book, shelf)\r\n} \r\n\r\n   render() {\r\n    return (\r\n      <div className = \"app\">\r\n         <Route exact path = '/' render = { () => (\r\n           <HomePage books = {this.state.books} updateShelf = {this.updateShelf} />\r\n         )} />\r\n         <Route exact path = '/search' render = { () => (\r\n           <Search books = {this.state.books} updateShelf = {this.updateShelf} />\r\n         )} />\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n       <App />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}